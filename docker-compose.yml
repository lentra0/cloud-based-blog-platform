version: '3.8'

env_file: .env

services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SQL_ECHO: 'False'
      PGHOST: ${POSTGRES_HOST:-postgres}
      PGUSER: ${POSTGRES_USER:-postgres}
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGDATABASE: ${POSTGRES_DB:-postgres}
    ports:
      - '8000:8000'
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    ports:
      - '3000:3000'
    depends_on:
      - backend
    restart: unless-stopped

  redis-exporter:
    image: oliver006/redis_exporter:v1.47.0
    command: -redis.addr redis:6379
    ports:
      - '9121:9121'
    depends_on:
      - redis

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.11.0
    environment:
      DATA_SOURCE_NAME: ${POSTGRES_EXPORTER_DSN:-"postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"}
    ports:
      - '9187:9187'
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v2.44.0
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    depends_on:
      - backend
      - redis-exporter
      - postgres-exporter
    restart: unless-stopped

  grafana:
    image: grafana/grafana:9.5.4
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - '3001:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  grafana_data:
